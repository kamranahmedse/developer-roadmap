{
  "9cD5ag1L0GqHx4_zxc5JX": {
    "title": "Open API Specs",
    "description": "OpenAPI Specification (OAS), formerly Swagger, is a standard for defining and documenting RESTful APIs in YAML/JSON format. Describes endpoints, formats, authentication, and metadata. Enables client generation, automated documentation, testing, and promotes API design consistency.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "OpenAPI Specification Website",
        "url": "https://swagger.io/specification/",
        "type": "article"
      },
      {
        "title": "Open API Live Editor",
        "url": "https://swagger.io/tools/swagger-editor/",
        "type": "article"
      },
      {
        "title": "OpenAPI 3.0: How to Design and Document APIs with the Latest OpenAPI Specification 3.0",
        "url": "https://www.youtube.com/watch?v=6kwmW_p_Tig",
        "type": "video"
      },
      {
        "title": " REST API and OpenAPI: It’s Not an Either/Or Question",
        "url": "https://www.youtube.com/watch?v=pRS9LRBgjYg",
        "type": "video"
      }
    ]
  },
  "gKTSe9yQFVbPVlLzWB0hC": {
    "title": "Search Engines",
    "description": "Search engines like Elasticsearch are specialized tools for fast, scalable searching and analyzing large data volumes. Built on Apache Lucene, they offer full-text search, real-time indexing, distributed architecture, powerful query DSL, and analytics capabilities for log and event data analysis.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Elasticsearch",
        "url": "https://www.elastic.co/elasticsearch/",
        "type": "article"
      }
    ]
  },
  "EwvLPSI6AlZ4TnNIJTZA4": {
    "title": "Learn about APIs",
    "description": "API (Application Programming Interface) defines rules and protocols for software applications to communicate. Provides standardized access to functionalities without understanding internal workings. Includes endpoints, request methods (GET, POST, PUT), and data formats (JSON, XML).\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is an API?",
        "url": "https://aws.amazon.com/what-is/api/",
        "type": "article"
      },
      {
        "title": "daily.dev API Feed",
        "url": "https://app.daily.dev/tags/rest-api",
        "type": "article"
      },
      {
        "title": "What is an API (in 5 minutes)",
        "url": "https://www.youtube.com/watch?v=ByGJQzlzxQg",
        "type": "video"
      }
    ]
  },
  "SiYUdtYMDImRPmV2_XPkH": {
    "title": "Internet",
    "description": "The internet is a global network of interconnected computers using TCP/IP protocols. Requests travel through ISPs to DNS servers for domain-to-IP translation, then route across networks via routers to destination servers. Enables dynamic, decentralized global communication.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "How does the Internet Work?",
        "url": "https://cs.fyi/guide/how-does-internet-work",
        "type": "article"
      },
      {
        "title": "The Internet Explained",
        "url": "https://www.vox.com/2014/6/16/18076282/the-internet",
        "type": "article"
      },
      {
        "title": "How Does the Internet Work?",
        "url": "http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm",
        "type": "article"
      },
      {
        "title": "Introduction to Internet",
        "url": "/guides/what-is-internet",
        "type": "article"
      },
      {
        "title": "How does the Internet work?",
        "url": "https://www.youtube.com/watch?v=x3c1ih2NJEg",
        "type": "video"
      },
      {
        "title": "How does the internet work? (Full Course)",
        "url": "https://www.youtube.com/watch?v=zN8YNNHcaZc",
        "type": "video"
      }
    ]
  },
  "CWwh2abwqx4hAxpAGvhIx": {
    "title": "Rust",
    "description": "Rust is a systems programming language focused on safety, performance, and concurrency. Provides memory safety without garbage collection through ownership model preventing null pointers and data races. Strong type system with modern features suitable for systems programming to web servers.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Rust Roadmap",
        "url": "https://roadmap.sh/rust",
        "type": "article"
      },
      {
        "title": "The Rust Programming Language - Book",
        "url": "https://doc.rust-lang.org/book/",
        "type": "article"
      },
      {
        "title": "Rust vs. Go: Why They’re Better Together",
        "url": "https://thenewstack.io/rust-vs-go-why-theyre-better-together/",
        "type": "article"
      },
      {
        "title": "Rust by the Numbers: The Rust Programming Language in 2021",
        "url": "https://thenewstack.io/rust-by-the-numbers-the-rust-programming-language-in-2021/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Rust",
        "url": "https://app.daily.dev/tags/rust?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Learn Rust Programming",
        "url": "https://www.youtube.com/watch?v=BpPEoZW5IiY",
        "type": "video"
      }
    ]
  },
  "l9Wrq_Ad9-Ju4NIB0m5Ha": {
    "title": "PHP",
    "description": "PHP (Hypertext Preprocessor) is an open-source scripting language for web development embedded in HTML to create dynamic pages. Known for simplicity and database integration, particularly MySQL. Powers major platforms like WordPress, Joomla, and Drupal with server-side scripting capabilities.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated PHP Roadmap",
        "url": "https://roadmap.sh/php",
        "type": "article"
      },
      {
        "title": "PHP",
        "url": "https://php.net/",
        "type": "article"
      },
      {
        "title": "PHP - The Right Way",
        "url": "https://phptherightway.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about PHP",
        "url": "https://app.daily.dev/tags/php?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "PHP for Beginners",
        "url": "https://www.youtube.com/watch?v=zZ6vybT1HQs",
        "type": "video"
      }
    ]
  },
  "BdXbcz4-ar3XOX0wIKzBp": {
    "title": "Go",
    "description": "Go (Golang) is Google's statically typed, compiled language combining efficiency with ease of use. Features built-in concurrency via goroutines and channels, simple syntax, fast compilation, and comprehensive standard library. Popular for microservices, web servers, and cloud-native development.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Go Roadmap",
        "url": "https://roadmap.sh/golang",
        "type": "article"
      },
      {
        "title": "Go Reference Documentation",
        "url": "https://go.dev/doc/",
        "type": "article"
      },
      {
        "title": "Go by Example - annotated example programs",
        "url": "https://gobyexample.com/",
        "type": "article"
      },
      {
        "title": "Go, the Programming Language of the Cloud",
        "url": "https://thenewstack.io/go-the-programming-language-of-the-cloud/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Golang",
        "url": "https://app.daily.dev/tags/golang?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Go Programming – Golang Course with Bonus Projects",
        "url": "https://www.youtube.com/watch?v=un6ZyFkqFKo",
        "type": "video"
      }
    ]
  },
  "8-lO-v6jCYYoklEJXULxN": {
    "title": "JavaScript",
    "description": "JavaScript is a versatile, high-level language for web interactivity and dynamic features. Runs client-side in browsers and server-side with Node.js for full-stack development. Supports multiple programming styles with rich ecosystem of frameworks like React, Angular, and Vue.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated JavaScript Roadmap",
        "url": "https://roadmap.sh/javascript",
        "type": "article"
      },
      {
        "title": "The Modern JavaScript Tutorial",
        "url": "https://javascript.info/",
        "type": "article"
      },
      {
        "title": "Build 30 Javascript Projects in 30 days",
        "url": "https://javascript30.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about JavaScript",
        "url": "https://app.daily.dev/tags/javascript?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "JavaScript Crash Course for Beginners",
        "url": "https://youtu.be/hdI2bqOjy3c?t=2",
        "type": "video"
      }
    ]
  },
  "ANeSwxJDJyQ-49pO2-CCI": {
    "title": "Java",
    "description": "Java is Oracle's high-level, object-oriented language following \"write once, run anywhere\" via JVM. Features automatic memory management, vast standard library, and strong security. Widely used for enterprise applications, Android apps, and backend systems.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Java Roadmap",
        "url": "https://roadmap.sh/java",
        "type": "article"
      },
      {
        "title": "Java Website",
        "url": "https://www.java.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Java",
        "url": "https://app.daily.dev/tags/java?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Complete Java course",
        "url": "https://www.youtube.com/watch?v=xk4_1vDrzzo",
        "type": "video"
      }
    ]
  },
  "J_sVHsD72Yzyqb9KCIvAY": {
    "title": "Python",
    "description": "Python is a high-level, interpreted language known for readability, simplicity, and versatility. Supports multiple paradigms with rich ecosystem including Django/Flask (web), Pandas/NumPy (data), TensorFlow/PyTorch (ML). Used for web development, data science, automation, and scripting.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Python Full Course for free",
        "url": "https://www.youtube.com/watch?v=ix9cRaBkVe0",
        "type": "course"
      },
      {
        "title": "Visit Dedicated Python Roadmap",
        "url": "https://roadmap.sh/python",
        "type": "article"
      },
      {
        "title": "Python Website",
        "url": "https://www.python.org/",
        "type": "article"
      },
      {
        "title": "Automate the Boring Stuff",
        "url": "https://automatetheboringstuff.com/",
        "type": "article"
      },
      {
        "title": "An Introduction to Python for Non-Programmers",
        "url": "https://thenewstack.io/an-introduction-to-python-for-non-programmers/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Python",
        "url": "https://app.daily.dev/tags/python?ref=roadmapsh",
        "type": "article"
      }
    ]
  },
  "rImbMHLLfJwjf3l25vBkc": {
    "title": "C#",
    "description": "C# is Microsoft's modern, object-oriented language combining C++ power with Visual Basic simplicity. Used for Windows apps, [ASP.NET](http://ASP.NET) web development, Unity games, and Xamarin mobile apps. Features garbage collection, type safety, and strong .NET ecosystem integration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "C# Learning Path",
        "url": "https://docs.microsoft.com/en-us/learn/paths/csharp-first-steps/?WT.mc_id=dotnet-35129-website",
        "type": "course"
      },
      {
        "title": "C# Tour",
        "url": "https://learn.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/",
        "type": "article"
      },
      {
        "title": "Explore top posts about C#",
        "url": "https://app.daily.dev/tags/csharp?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Learn C# Programming – Full Course with Mini-Projects",
        "url": "https://www.youtube.com/watch?v=YrtFtdTTfv0",
        "type": "video"
      }
    ]
  },
  "SlH0Rl07yURDko2nDPfFy": {
    "title": "Ruby",
    "description": "Ruby is a high-level, object-oriented language known for simplicity, productivity, and elegant syntax. Emphasizes developer happiness and supports multiple paradigms. Famous for Ruby on Rails framework enabling rapid web application development. Popular for web development, scripting, and prototyping.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Ruby Website",
        "url": "https://www.ruby-lang.org/en/",
        "type": "article"
      },
      {
        "title": "Learn Ruby in 20 minutes",
        "url": "https://www.ruby-lang.org/en/documentation/quickstart/",
        "type": "article"
      },
      {
        "title": "Ruby, An Introduction to a Programmer’s Best Friend",
        "url": "https://thenewstack.io/ruby-a-programmers-best-friend/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Ruby",
        "url": "https://app.daily.dev/tags/ruby?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Ruby Comprehensive courses",
        "url": "https://www.youtube.com/playlist?list=PL_EzhIKp343lBMH4UuklrMRL_WkilGoXe",
        "type": "video"
      }
    ]
  },
  "pick-a-backend-language@2f0ZO6GJElfZ2Eis28Hzg.md": {
    "title": "Pick a Backend Language",
    "description": "",
    "links": []
  },
  "_I1E__wCIVrhjMk6IMieE": {
    "title": "Git",
    "description": "Git is a distributed version control system created by Linus Torvalds in 2005. Tracks code changes, enables collaborative development, maintains complete history, and supports branching/merging. Each developer has full repository copy, allowing offline work and robust collaboration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Git & GitHub Roadmap",
        "url": "https://roadmap.sh/git-github",
        "type": "article"
      },
      {
        "title": "Git Documentation",
        "url": "https://git-scm.com/doc",
        "type": "article"
      },
      {
        "title": "Git Cheat Sheet",
        "url": "https://cs.fyi/guide/git-cheatsheet",
        "type": "article"
      },
      {
        "title": "Learn Git Branching",
        "url": "https://learngitbranching.js.org/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Git",
        "url": "https://app.daily.dev/tags/git?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Git & GitHub Crash Course For Beginners",
        "url": "https://www.youtube.com/watch?v=SWYqp7iY_Tc",
        "type": "video"
      },
      {
        "title": "Learn Git - Full Course",
        "url": "https://www.youtube.com/watch?v=rH3zE7VlIMs",
        "type": "video"
      }
    ]
  },
  "ezdqQW9wTUw93F6kjOzku": {
    "title": "Version Control Systems",
    "description": "Version Control Systems (VCS) manage and track code changes over time, enabling efficient collaboration. Record file changes, allow reverting to previous versions, and maintain modification history. Can be centralized (Subversion) or distributed (Git, Mercurial) for collaboration and code integrity.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Git & GitHub Roadmap",
        "url": "https://roadmap.sh/git-github",
        "type": "article"
      },
      {
        "title": "Git Documentation",
        "url": "https://git-scm.com/doc",
        "type": "article"
      },
      {
        "title": "What is Version Control?",
        "url": "https://www.atlassian.com/git/tutorials/what-is-version-control",
        "type": "article"
      },
      {
        "title": "Version Control System (VCS) - Everything you need to know",
        "url": "https://www.youtube.com/watch?v=SVkuliabq4g",
        "type": "video"
      }
    ]
  },
  "ptD8EVqwFUYr4W5A_tABY": {
    "title": "GitHub",
    "description": "GitHub is Microsoft's web-based Git hosting platform offering repositories, pull requests, issues, and automated workflows. Supports public/private repos, code review, project management, and social coding features. Central hub for open-source and team development collaboration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated Git & GitHub Roadmap",
        "url": "https://roadmap.sh/git-github",
        "type": "article"
      },
      {
        "title": "GitHub",
        "url": "https://github.com",
        "type": "article"
      },
      {
        "title": "GitHub Documentation",
        "url": "https://docs.github.com",
        "type": "article"
      },
      {
        "title": "Explore top posts about GitHub",
        "url": "https://app.daily.dev/tags/github?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is GitHub?",
        "url": "https://www.youtube.com/watch?v=w3jLJU7DT5E",
        "type": "video"
      },
      {
        "title": "Git vs. GitHub: Whats the difference?",
        "url": "https://www.youtube.com/watch?v=wpISo9TNjfU",
        "type": "video"
      },
      {
        "title": "Git and GitHub for Beginners",
        "url": "https://www.youtube.com/watch?v=RGOj5yH7evk",
        "type": "video"
      }
    ]
  },
  "Wcp-VDdFHipwa7hNAp1z_": {
    "title": "GitLab",
    "description": "GitLab is a comprehensive DevOps platform providing source code management, CI/CD, issue tracking, and more in one application. Features merge requests, built-in pipelines, container registry, and Kubernetes integration. Offers cloud-hosted and self-hosted options for complete development lifecycle management.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "GitLab",
        "url": "https://gitlab.com/",
        "type": "article"
      },
      {
        "title": "GitLab Documentation",
        "url": "https://docs.gitlab.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about GitLab",
        "url": "https://app.daily.dev/tags/gitlab?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is GitLab and Why Use It?",
        "url": "https://www.youtube.com/watch?v=bnF7f1zGpo4",
        "type": "video"
      }
    ]
  },
  "NvUcSDWBhzJZ31nzT4UlE": {
    "title": "Repo Hosting Services",
    "description": "Repo hosting services provide storage, management, and collaboration tools for version-controlled code repositories. Support Git, Mercurial, Subversion with features like branching, pull requests, issue tracking, code review, and CI/CD integration. Popular services: GitHub, GitLab, Bitbucket.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "GitHub",
        "url": "https://github.com",
        "type": "article"
      },
      {
        "title": "GitLab",
        "url": "https://about.gitlab.com/",
        "type": "article"
      },
      {
        "title": "BitBucket",
        "url": "https://bitbucket.org/product/guides/getting-started/overview",
        "type": "article"
      }
    ]
  },
  "FihTrMO56kj9jT8O_pO2T": {
    "title": "PostgreSQL",
    "description": "PostgreSQL is an advanced, open-source RDBMS known for robustness, extensibility, and standards compliance. Supports complex queries, custom data types, full-text search, and ACID properties. Highly extensible with strong concurrency support, suitable for web apps to data warehousing.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated PostgreSQL DBA Roadmap",
        "url": "https://roadmap.sh/postgresql-dba",
        "type": "article"
      },
      {
        "title": "Official Website",
        "url": "https://www.postgresql.org/",
        "type": "article"
      },
      {
        "title": "Learn PostgreSQL - Full Tutorial for Beginners",
        "url": "https://www.postgresqltutorial.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about PostgreSQL",
        "url": "https://app.daily.dev/tags/postgresql?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "PostgreSQL in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=n2Fluyr3lbc",
        "type": "video"
      },
      {
        "title": "Postgres tutorial for Beginners",
        "url": "https://www.youtube.com/watch?v=SpfIwlAYaKk",
        "type": "video"
      }
    ]
  },
  "dEsTje8kfHwWjCI3zcgLC": {
    "title": "MS SQL",
    "description": "Microsoft SQL Server is a relational database management system for structured data management. Supports querying, transactions, data warehousing with T-SQL, SSIS integration, SSAS analytics, and SSRS reporting. Used in enterprise environments for reliable storage and processing.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated SQL Roadmap",
        "url": "https://roadmap.sh/sql",
        "type": "article"
      },
      {
        "title": "MS SQL",
        "url": "https://www.microsoft.com/en-ca/sql-server/",
        "type": "article"
      },
      {
        "title": "Tutorials for SQL Server",
        "url": "https://docs.microsoft.com/en-us/sql/sql-server/tutorials-for-sql-server-2016?view=sql-server-ver15",
        "type": "article"
      },
      {
        "title": "SQL Server tutorial for beginners",
        "url": "https://www.youtube.com/watch?v=-EPMOaV7h_Q",
        "type": "video"
      }
    ]
  },
  "VPxOdjJtKAqmM5V0LR5OC": {
    "title": "MySQL",
    "description": "MySQL is an open-source RDBMS known for speed, reliability, and ease of use. Supports SQL, transactions, indexing, and stored procedures. Widely used for web applications, integrates with many languages, and part of LAMP stack. Maintained by Oracle with large community support.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "MySQL",
        "url": "https://www.mysql.com/",
        "type": "article"
      },
      {
        "title": "MySQL for Developers",
        "url": "https://planetscale.com/courses/mysql-for-developers/introduction/course-introduction",
        "type": "article"
      },
      {
        "title": "MySQL Tutorial",
        "url": "https://www.mysqltutorial.org/",
        "type": "article"
      },
      {
        "title": "Explore top posts about MySQL",
        "url": "https://app.daily.dev/tags/mysql?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "MySQL Complete Course",
        "url": "https://www.youtube.com/watch?v=5OdVJbNCSso",
        "type": "video"
      }
    ]
  },
  "h1SAjQltHtztSt8QmRgab": {
    "title": "Oracle",
    "description": "Oracle Database is an enterprise-grade RDBMS known for scalability, reliability, and comprehensive features. Supports complex data management, SQL querying, transaction management, clustering, and multiple data models (relational, spatial, graph). Used for large-scale, secure, high-performance applications.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Oracle Website",
        "url": "https://www.oracle.com/database/",
        "type": "article"
      },
      {
        "title": "Oracle Docs",
        "url": "https://docs.oracle.com/en/database/index.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Oracle",
        "url": "https://app.daily.dev/tags/oracle?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Oracle SQL Tutorial for Beginners",
        "url": "https://www.youtube.com/watch?v=ObbNGhcxXJA",
        "type": "video"
      }
    ]
  },
  "tD3i-8gBpMKCHB-ITyDiU": {
    "title": "MariaDB",
    "description": "MariaDB is a community-developed MySQL fork created by original MySQL team members. Designed as a feature-rich, stable, drop-in replacement for MySQL with better licensing. Works with external developers to deliver comprehensive open-source SQL server.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "MariaDB",
        "url": "https://mariadb.org/",
        "type": "article"
      },
      {
        "title": "MariaDB vs MySQL",
        "url": "https://www.guru99.com/mariadb-vs-mysql.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Infrastructure",
        "url": "https://app.daily.dev/tags/infrastructure?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "MariaDB Tutorial For Beginners in One Hour",
        "url": "https://www.youtube.com/watch?v=_AMj02sANpI",
        "type": "video"
      }
    ]
  },
  "r45b461NxLN6wBODJ5CNP": {
    "title": "Relational Databases",
    "description": "Relational databases organize data into structured tables with rows and columns, using SQL for querying. Enforce data integrity through keys and constraints, handle complex queries and transactions efficiently. Examples: MySQL, PostgreSQL, Oracle. Used for structured data storage and strong consistency.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Databases and SQL",
        "url": "https://www.edx.org/course/databases-5-sql",
        "type": "course"
      },
      {
        "title": "Relational Databases",
        "url": "https://www.ibm.com/cloud/learn/relational-databases",
        "type": "article"
      },
      {
        "title": "51 Years of Relational Databases",
        "url": "https://learnsql.com/blog/codd-article-databases/",
        "type": "article"
      },
      {
        "title": "Intro To Relational Databases",
        "url": "https://www.udacity.com/course/intro-to-relational-databases--ud197",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Relational Database",
        "url": "https://youtu.be/OqjJjpjDRLc",
        "type": "video"
      }
    ]
  },
  "F8frGuv1dunOdcVJ_IiGs": {
    "title": "NoSQL Databases",
    "description": "NoSQL databases handle unstructured, semi-structured, or rapidly changing data with flexible schemas. Four types: Document stores (MongoDB, CouchDB), Key-value stores (Redis, Riak), Column-family (Cassandra, HBase), and Graph databases (Neo4j, Neptune). Used for high scalability, flexibility, and performance applications.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "NoSQL Explained",
        "url": "https://www.mongodb.com/nosql-explained",
        "type": "article"
      },
      {
        "title": "Explore top posts about NoSQL",
        "url": "https://app.daily.dev/tags/nosql?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "How do NoSQL Databases work",
        "url": "https://www.youtube.com/watch?v=0buKQHokLK8",
        "type": "video"
      },
      {
        "title": "SQL vs NoSQL Explained",
        "url": "https://www.youtube.com/watch?v=ruz-vK8IesE",
        "type": "video"
      }
    ]
  },
  "Z7jp_Juj5PffSxV7UZcBb": {
    "title": "ORMs",
    "description": "ORM (Object-Relational Mapping) allows developers to interact with databases using object-oriented concepts. Maps database tables to classes and rows to objects, eliminating raw SQL queries. Simplifies data manipulation and improves maintainability. Popular ORMs: Hibernate (Java), Entity Framework (.NET), SQLAlchemy (Python).\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is an ORM, how does it work, and how should I use one?",
        "url": "https://stackoverflow.com/a/1279678",
        "type": "article"
      },
      {
        "title": "What is an ORM",
        "url": "https://www.freecodecamp.org/news/what-is-an-orm-the-meaning-of-object-relational-mapping-database-tools/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Why Use an ORM?",
        "url": "https://www.youtube.com/watch?v=vHt2LC1EM3Q",
        "type": "video"
      }
    ]
  },
  "Ge2SnKBrQQrU-oGLz6TmT": {
    "title": "Normalization",
    "description": "Database normalization structures relational databases using normal forms to reduce data redundancy and improve integrity. Proposed by Edgar F. Codd, it organizes columns and tables to enforce proper dependencies through database constraints via synthesis or decomposition processes.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is Normalization in DBMS (SQL)? 1NF, 2NF, 3NF, BCNF Database with Example",
        "url": "https://www.guru99.com/database-normalization.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Database",
        "url": "https://app.daily.dev/tags/database?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Complete guide to Database Normalization in SQL",
        "url": "https://www.youtube.com/watch?v=rBPQ5fg_kiY",
        "type": "video"
      }
    ]
  },
  "qSAdfaGUfn8mtmDjHJi3z": {
    "title": "ACID",
    "description": "ACID represents four database transaction properties: Atomicity (all-or-nothing execution), Consistency (valid state maintenance), Isolation (concurrent transaction separation), and Durability (permanent commit survival). These principles ensure reliable data processing and integrity in database systems, crucial for financial and e-commerce applications.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is ACID Compliant Database?",
        "url": "https://retool.com/blog/whats-an-acid-compliant-database/",
        "type": "article"
      },
      {
        "title": "What is ACID Compliance?: Atomicity, Consistency, Isolation",
        "url": "https://fauna.com/blog/what-is-acid-compliance-atomicity-consistency-isolation",
        "type": "article"
      },
      {
        "title": "ACID Explained: Atomic, Consistent, Isolated & Durable",
        "url": "https://www.youtube.com/watch?v=yaQ5YMWkxq4",
        "type": "video"
      }
    ]
  },
  "GwApfL4Yx-b5Y8dB9Vy__": {
    "title": "Failure Modes",
    "description": "Database failure modes include hardware failures, software bugs, data corruption, performance degradation, and distributed system inconsistencies. Common issues: data loss, unavailability, replication lag, deadlocks. Mitigated through redundancy, backups, transaction logging, and failover mechanisms.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Database Failure Modes",
        "url": "https://ieeexplore.ieee.org/document/7107294/",
        "type": "article"
      }
    ]
  },
  "rq_y_OBMD9AH_4aoecvAi": {
    "title": "Transactions",
    "description": "Database transactions are series of operations executed as atomic units to ensure data integrity. Follow ACID properties: Atomicity (all-or-nothing), Consistency (valid state), Isolation (no interference), Durability (permanent changes). Ensure reliable concurrent operations and data consistency.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What are Transactions?",
        "url": "https://fauna.com/blog/database-transaction",
        "type": "article"
      },
      {
        "title": "What is a Database transaction?",
        "url": "https://www.youtube.com/watch?v=wHUOeXbZCYA",
        "type": "video"
      },
      {
        "title": "ACID Properties in Databases With Examples",
        "url": "https://www.youtube.com/watch?v=GAe5oB742dw",
        "type": "video"
      }
    ]
  },
  "profiling-performance@SYXJhanu0lFmGj2m2XXhS.md": {
    "title": "Profiling Performance",
    "description": "",
    "links": []
  },
  "bQnOAu863hsHdyNMNyJop": {
    "title": "N+1 Problem",
    "description": "The N+1 problem occurs when an application retrieves a list then performs additional queries for each item's related data. Results in inefficient query multiplication (1 + N queries instead of optimized joins). Severely impacts performance with larger datasets. Solved through query optimization, joins, or batching techniques.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "In Detail Explanation of N+1 Problem",
        "url": "https://medium.com/doctolib/understanding-and-fixing-n-1-query-30623109fe89",
        "type": "article"
      },
      {
        "title": "What is the N+1 Problem",
        "url": "https://planetscale.com/blog/what-is-n-1-query-problem-and-how-to-solve-it",
        "type": "article"
      },
      {
        "title": "Solving N+1 Problem: For Java Backend Developers",
        "url": "https://dev.to/jackynote/solving-the-notorious-n1-problem-optimizing-database-queries-for-java-backend-developers-2o0p",
        "type": "article"
      },
      {
        "title": "SQLite and the N+1 (no) problem",
        "url": "https://www.youtube.com/watch?v=qPfAQY_RahA",
        "type": "video"
      }
    ]
  },
  "LJt27onEOeIBomiEMTyKd": {
    "title": "More about Databases",
    "description": "A database is a structured collection of useful data that serves as an organizational asset. A database management system (DBMS) is software designed to maintain and extract large data collections efficiently and timely.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Oracle: What is a Database?",
        "url": "https://www.oracle.com/database/what-is-database/",
        "type": "article"
      },
      {
        "title": "Prisma.io: What are Databases?",
        "url": "https://www.prisma.io/dataguide/intro/what-are-databases",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      }
    ]
  },
  "y-xkHFE9YzhNIX3EiWspL": {
    "title": "Database Indexes",
    "description": "Database indexes are data structures that speed up data retrieval by creating references to table data without full table scans. Include B-tree, bitmap, and hash types. Enhance query performance but increase storage requirements and slow down writes due to index maintenance.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is a Database Index?",
        "url": "https://www.codecademy.com/article/sql-indexes",
        "type": "article"
      },
      {
        "title": "Explore top posts about Database",
        "url": "https://app.daily.dev/tags/database?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Database Indexing Explained",
        "url": "https://www.youtube.com/watch?v=-qNSXK7s7_w",
        "type": "video"
      }
    ]
  },
  "zWstl08R4uzqve4BdYurp": {
    "title": "Sharding Strategies",
    "description": "Sharding splits large datasets into smaller chunks (logical shards) distributed across different machines/database nodes to distribute traffic load. Improves application scalability. Supported by many but not all databases.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Wikipedia - Sharding in Database Architectures",
        "url": "https://en.wikipedia.org/wiki/Shard_(database_architecture)",
        "type": "article"
      },
      {
        "title": "How sharding a database can make it faster",
        "url": "https://stackoverflow.blog/2022/03/14/how-sharding-a-database-can-make-it-faster/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Database Sharding?",
        "url": "https://www.youtube.com/watch?v=XP98YCr-iXQ",
        "type": "video"
      }
    ]
  },
  "wrl7HHWXOaxoKVlNZxZ6d": {
    "title": "Data Replication",
    "description": "Data replication creates multiple copies of data across distributed system nodes for availability, reliability, and performance. Can be synchronous or asynchronous. Uses master-slave, multi-master, or peer-to-peer models. Improves fault tolerance but challenges data consistency.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Data Replication? - IBM",
        "url": "https://www.ibm.com/topics/data-replication",
        "type": "article"
      },
      {
        "title": "What is Data Replication?",
        "url": "https://www.youtube.com/watch?v=iO8a1nMbL1o",
        "type": "video"
      }
    ]
  },
  "LAdKDJ4LcMaDWqslMvE8X": {
    "title": "CAP Theorem",
    "description": "CAP Theorem states distributed systems can only guarantee two of three properties: Consistency (same data across nodes), Availability (system responds to requests), and Partition tolerance (operates despite network failures). Guides distributed system design decisions and database selection.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is CAP Theorem?",
        "url": "https://www.bmc.com/blogs/cap-theorem/",
        "type": "article"
      },
      {
        "title": "An Illustrated Proof of the CAP Theorem",
        "url": "https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/",
        "type": "article"
      },
      {
        "title": "CAP Theorem and its applications in NoSQL Databases",
        "url": "https://www.ibm.com/uk-en/cloud/learn/cap-theorem",
        "type": "article"
      },
      {
        "title": "What is CAP Theorem?",
        "url": "https://www.youtube.com/watch?v=_RbsFXWRZ10",
        "type": "video"
      }
    ]
  },
  "95d9itpUZ4s9roZN8kG9x": {
    "title": "Scaling Databases",
    "description": "Scaling databases adapts them to handle more data and users efficiently through vertical scaling (upgrading hardware) or horizontal scaling (adding servers). Key techniques include sharding and replication to maintain robustness as databases grow.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "Strategies for Scaling Databases: A Comprehensive Guide",
        "url": "https://medium.com/@anil.goyal0057/strategies-for-scaling-databases-a-comprehensive-guide-b69cda7df1d3",
        "type": "article"
      },
      {
        "title": "Horizontal vs. Vertical Scaling - How to Scale a Database",
        "url": "https://www.freecodecamp.org/news/horizontal-vs-vertical-scaling-in-database/",
        "type": "article"
      }
    ]
  },
  "sNceS4MpSIjRkWhNDmrFg": {
    "title": "JSON APIs",
    "description": "JSON (JavaScript Object Notation) is an encoding scheme eliminating ad-hoc code for server communication. JSON API provides standardized implementation for data stores and structures, including entity types, bundles, and fields with defined communication protocols.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "JSON API",
        "url": "https://jsonapi.org/",
        "type": "article"
      },
      {
        "title": "What is JSON API?",
        "url": "https://medium.com/@niranjan.cs/what-is-json-api-3b824fba2788",
        "type": "article"
      },
      {
        "title": "JSON API: Explained in 4 minutes",
        "url": "https://www.youtube.com/watch?v=N-4prIh7t38",
        "type": "video"
      }
    ]
  },
  "sSNf93azjuyMzQqIHE0Rh": {
    "title": "SOAP",
    "description": "SOAP (Simple Object Access Protocol) is a structured message protocol for exchanging information between systems and applications. SOAP APIs are developed in formal, structured ways. Messages can be carried over various protocols including HTTP.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "REST vs SOAP",
        "url": "https://www.youtube.com/watch?v=_fq8Ye8kodA",
        "type": "video"
      }
    ]
  },
  "J-TOE2lT4At1mSdNoxPS1": {
    "title": "gRPC",
    "description": "gRPC is a high-performance, open-source RPC (Remote Procedure Call) framework. Allows programs to execute procedures on remote computers like local functions. Developers don't need to handle remote interaction details, and client/server can use different programming languages.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "gRPC Website",
        "url": "https://grpc.io/",
        "type": "article"
      },
      {
        "title": "What Is GRPC?",
        "url": "https://www.wallarm.com/what/the-concept-of-grpc",
        "type": "article"
      },
      {
        "title": "Explore top posts about gRPC",
        "url": "https://app.daily.dev/tags/grpc?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What Is GRPC?",
        "url": "https://www.youtube.com/watch?v=hVrwuMnCtok",
        "type": "video"
      }
    ]
  },
  "lfNFDZZNdrB0lbEaMtU71": {
    "title": "REST",
    "description": "REST API is an architectural style using standard HTTP methods (GET, POST, PUT, DELETE) to interact with URI-represented resources. It's stateless, requiring complete request information, uses HTTP status codes, and typically communicates via JSON/XML. Popular for simplicity and scalability.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is a REST API?",
        "url": "https://www.redhat.com/en/topics/api/what-is-a-rest-api",
        "type": "article"
      },
      {
        "title": "Roy Fieldings dissertation chapter, Representational State Transfer (REST)",
        "url": "https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm",
        "type": "article"
      },
      {
        "title": "Learn REST: A RESTful Tutorial",
        "url": "https://restapitutorial.com/",
        "type": "article"
      },
      {
        "title": "Explore top posts about REST API",
        "url": "https://app.daily.dev/tags/rest-api?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is a REST API?",
        "url": "https://www.youtube.com/watch?v=-mN3VyJuCjM",
        "type": "video"
      }
    ]
  },
  "zp3bq38tMnutT2N0tktOW": {
    "title": "GraphQL",
    "description": "GraphQL is Facebook's query language for APIs allowing clients to request exactly the data they need. Uses single endpoint with schema-defined data structure, reducing over-fetching and under-fetching. More flexible than REST for complex applications with diverse platform needs.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated GraphQL Roadmap",
        "url": "https://roadmap.sh/graphql",
        "type": "article"
      },
      {
        "title": "GraphQL",
        "url": "https://graphql.org/",
        "type": "article"
      },
      {
        "title": "Explore top posts about GraphQL",
        "url": "https://app.daily.dev/tags/graphql?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Tutorial - GraphQL Explained in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=eIQh02xuVw4",
        "type": "video"
      }
    ]
  },
  "http-caching@KWTbEVX_WxS8jmSaAX3Fe.md": {
    "title": "HTTP Caching",
    "description": "",
    "links": []
  },
  "caching@uPjCrDGA2MHylWXbZvMBM.md": {
    "title": "Caching",
    "description": "",
    "links": []
  },
  "RBrIP5KbVQ2F0ly7kMfTo": {
    "title": "Web Security",
    "description": "Web security protects applications from threats through strong authentication, encryption (SSL/TLS), input validation preventing SQL injection and XSS attacks, secure coding practices, session management, regular updates, and ongoing security testing including penetration testing.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "OWASP Web Application Security Testing Checklist",
        "url": "https://github.com/0xRadi/OWASP-Web-Checklist",
        "type": "opensource"
      },
      {
        "title": "Why HTTPS Matters",
        "url": "https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https",
        "type": "article"
      },
      {
        "title": "Explore top posts about Security",
        "url": "https://app.daily.dev/tags/security?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "7 Security Risks and Hacking Stories for Web Developers",
        "url": "https://www.youtube.com/watch?v=4YOpILi9Oxs",
        "type": "video"
      }
    ]
  },
  "381Kw1IMRv7CJp-Uf--qd": {
    "title": "Integration Testing",
    "description": "Integration testing verifies interactions between software components to ensure they work together correctly. Tests module communication via APIs, databases, and third-party services. Catches integration issues like data mismatches and protocol errors that unit tests miss.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Integration Testing",
        "url": "https://www.guru99.com/integration-testing.html",
        "type": "article"
      },
      {
        "title": "How to Integrate and Test Your Tech Stack",
        "url": "https://thenewstack.io/how-to-integrate-and-test-your-tech-stack/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Testing",
        "url": "https://app.daily.dev/tags/testing?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Integration Testing?",
        "url": "https://www.youtube.com/watch?v=kRD6PA6uxiY",
        "type": "video"
      }
    ]
  },
  "NAGisfq2CgeK3SsuRjnMw": {
    "title": "Functional Testing",
    "description": "Functional testing ensures software meets functional requirements through black box testing. Testers provide input and compare expected vs actual output without understanding source code. Contrasts with non-functional testing (performance, load, scalability).\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is Functional Testing?",
        "url": "https://www.guru99.com/functional-testing.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Testing",
        "url": "https://app.daily.dev/tags/testing?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Functional Testing vs Non-Functional Testing",
        "url": "https://www.youtube.com/watch?v=NgQT7miTP9M",
        "type": "video"
      }
    ]
  },
  "3OYm6b9f6WOrKi4KTOZYK": {
    "title": "Unit Testing",
    "description": "Unit testing tests individual components or units in isolation to ensure correct functionality. Focuses on smallest testable parts like functions with predefined inputs and expected outcomes. Automated tests written by developers during coding to catch bugs early and improve reliability.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Unit Testing",
        "url": "https://en.wikipedia.org/wiki/Unit_testing",
        "type": "article"
      },
      {
        "title": "What is Unit Testing?",
        "url": "https://www.guru99.com/unit-testing-guide.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Testing",
        "url": "https://app.daily.dev/tags/testing?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Unit Testing?",
        "url": "https://www.youtube.com/watch?v=W2KOSaetWBk",
        "type": "video"
      }
    ]
  },
  "STQQbPa7PE3gbjMdL6P-t": {
    "title": "Testing",
    "description": "Testing systematically evaluates software functionality, performance, and quality against requirements. Includes unit, integration, system, and acceptance testing levels. Can be manual or automated to identify defects, validate features, and ensure reliable performance before deployment.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is Software Testing?",
        "url": "https://www.guru99.com/software-testing-introduction-importance.html",
        "type": "article"
      },
      {
        "title": "Testing Pyramid",
        "url": "https://www.browserstack.com/guide/testing-pyramid-for-test-automation",
        "type": "article"
      },
      {
        "title": "Explore top posts about Testing",
        "url": "https://app.daily.dev/tags/testing?ref=roadmapsh",
        "type": "article"
      }
    ]
  },
  "mGfD7HfuP184lFkXZzGjG": {
    "title": "CI / CD",
    "description": "CI/CD automates building, testing, and deploying code changes. Continuous Integration merges code frequently with automated builds/tests. Continuous Delivery/Deployment extends this to staging/production. Improves software quality and development efficiency through early issue detection.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is CI/CD?",
        "url": "https://about.gitlab.com/topics/ci-cd/",
        "type": "article"
      },
      {
        "title": "A Primer: Continuous Integration and Continuous Delivery (CI/CD)",
        "url": "https://thenewstack.io/a-primer-continuous-integration-and-continuous-delivery-ci-cd/",
        "type": "article"
      },
      {
        "title": "Articles about CI/CD",
        "url": "https://thenewstack.io/category/ci-cd/",
        "type": "article"
      },
      {
        "title": "Explore top posts about CI/CD",
        "url": "https://app.daily.dev/tags/cicd?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "DevOps CI/CD Explained in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=scEDHsr3APg",
        "type": "video"
      },
      {
        "title": "Automate your Workflows with GitHub Actions",
        "url": "https://www.youtube.com/watch?v=nyKZTKQS_EQ",
        "type": "video"
      }
    ]
  },
  "monolith@Ke522R-4k6TDeiDRyZbbU.md": {
    "title": "Monolith",
    "description": "",
    "links": []
  },
  "n14b7sfTOwsjKTpFC9EZ2": {
    "title": "Service Mesh",
    "description": "Service mesh enhances communication, security, and management between microservices using intelligent proxies. Provides load balancing, service discovery, observability, and traffic management. Uses sidecar pattern where each microservice pairs with a proxy for independent network functionality management.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is a Service Mesh (AWS blog)?",
        "url": "https://aws.amazon.com/what-is/service-mesh/",
        "type": "article"
      },
      {
        "title": "What is a Service Mesh (RedHat blog)?",
        "url": "https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh",
        "type": "article"
      },
      {
        "title": "Explore top posts about Service Mesh",
        "url": "https://app.daily.dev/tags/service-mesh?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is a Service Mesh?",
        "url": "https://www.youtube.com/watch?v=vh1YtWjfcyk",
        "type": "video"
      }
    ]
  },
  "tObmzWpjsJtK4GWhx6pwB": {
    "title": "SOA",
    "description": "SOA (Service-Oriented Architecture) uses reusable, loosely coupled services that interact over networks through standardized protocols like HTTP and XML. Each service performs specific business functions independently. Enables scalable, flexible, interoperable systems with modular development and easier integration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is SOA?",
        "url": "https://aws.amazon.com/what-is/service-oriented-architecture/",
        "type": "article"
      },
      {
        "title": "Reference Architecture Foundation for Service Oriented Architecture",
        "url": "http://docs.oasis-open.org/soa-rm/soa-ra/v1.0/soa-ra.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about Architecture",
        "url": "https://app.daily.dev/tags/architecture?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Service Oriented Architecture (SOA) Simplified",
        "url": "https://www.youtube.com/watch?v=PA9RjHI463g",
        "type": "video"
      }
    ]
  },
  "8DmabQJXlrT__COZrDVTV": {
    "title": "Twelve Factor Apps",
    "description": "Twelve-Factor App methodology provides principles for building scalable, maintainable cloud applications. Key factors: single codebase, explicit dependencies, environment config, stateless processes, port binding, dev/prod parity, log streams, and graceful shutdown for portability and deployment ease.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "The Twelve-Factor App",
        "url": "https://12factor.net/",
        "type": "article"
      },
      {
        "title": "An illustrated guide to 12 Factor Apps",
        "url": "https://www.redhat.com/architect/12-factor-app",
        "type": "article"
      },
      {
        "title": "Every Developer NEEDS To Know 12-Factor App Principles",
        "url": "https://www.youtube.com/watch?v=FryJt0Tbt9Q",
        "type": "video"
      }
    ]
  },
  "tHiUpG9LN35E5RaHddMv5": {
    "title": "Architectural Patterns",
    "description": "Architectural patterns are reusable solutions to common software architecture problems. They address issues like performance limitations, high availability, and business risk minimization, providing proven templates for system design and structure.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "14 Architectural Patterns to know",
        "url": "https://www.redhat.com/architect/14-software-architecture-patterns",
        "type": "article"
      },
      {
        "title": "10 Common Software Architectural Patterns in a nutshell",
        "url": "https://theiotacademy.medium.com/10-common-software-architectural-patterns-in-a-nutshell-1b1f6cf5036b",
        "type": "article"
      }
    ]
  },
  "GPFRMcY1DEtRgnaZwJ3vW": {
    "title": "RabbitMQ",
    "description": "RabbitMQ is an open-source message broker using AMQP for asynchronous communication between distributed systems. Enables message queuing, routing, durability, and acknowledgments. Supports various messaging patterns (pub/sub, request/reply, point-to-point). Used for high-throughput enterprise messaging.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "RabbitMQ Tutorials",
        "url": "https://www.rabbitmq.com/getstarted.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about RabbitMQ",
        "url": "https://app.daily.dev/tags/rabbitmq?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "RabbitMQ Tutorial - Message Queues and Distributed Systems",
        "url": "https://www.youtube.com/watch?v=nFxjaVmFj5E",
        "type": "video"
      },
      {
        "title": "RabbitMQ in 100 Seconds",
        "url": "https://m.youtube.com/watch?v=NQ3fZtyXji0",
        "type": "video"
      }
    ]
  },
  "VoYSis1F1ZfTxMlQlXQKB": {
    "title": "Kafka",
    "description": "Apache Kafka is a distributed event streaming platform for high-throughput, fault-tolerant data processing. Acts as message broker with publish/subscribe model. Features topics, partitions for parallel processing, and replication for fault tolerance. Ideal for real-time analytics and data integration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Apache Kafka",
        "url": "https://kafka.apache.org/quickstart",
        "type": "article"
      },
      {
        "title": "Explore top posts about Kafka",
        "url": "https://app.daily.dev/tags/kafka?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Apache Kafka Streams",
        "url": "https://docs.confluent.io/platform/current/streams/concepts.html",
        "type": "article"
      },
      {
        "title": "Kafka Streams Confluent",
        "url": "https://kafka.apache.org/documentation/streams/",
        "type": "article"
      },
      {
        "title": "Apache Kafka Fundamentals",
        "url": "https://www.youtube.com/watch?v=B5j3uNBH8X4",
        "type": "video"
      },
      {
        "title": "Kafka in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=uvb00oaa3k8",
        "type": "video"
      }
    ]
  },
  "nJ5FpFgGCRaALcWmAKBKT": {
    "title": "Message Brokers",
    "description": "Message brokers facilitate communication between distributed systems by routing and delivering messages. Enable asynchronous messaging, decoupling producers from consumers. Include features like queuing, load balancing, persistence, and acknowledgment. Popular examples: Kafka, RabbitMQ, ActiveMQ.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What are Message Brokers?",
        "url": "https://www.ibm.com/topics/message-brokers",
        "type": "article"
      },
      {
        "title": "Introduction to Message Brokers",
        "url": "https://www.youtube.com/watch?v=57Qr9tk6Uxc",
        "type": "video"
      },
      {
        "title": "Kafka vs RabbitMQ",
        "url": "https://www.youtube.com/watch?v=_5mu7lZz5X4",
        "type": "video"
      }
    ]
  },
  "31ZlpfIPr9-5vYZqvjUeL": {
    "title": "LXC",
    "description": "LXC (Linux Containers) runs multiple Linux systems virtually on a single Linux kernel. Provides userspace interface for kernel containment features with powerful API and simple tools for creating and managing system or application containers.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "LXC Documentation",
        "url": "https://linuxcontainers.org/lxc/documentation/",
        "type": "article"
      },
      {
        "title": "What is LXC?",
        "url": "https://linuxcontainers.org/lxc/introduction/",
        "type": "article"
      },
      {
        "title": "Getting Started with LXD Containerization",
        "url": "https://www.youtube.com/watch?v=aIwgPKkVj8s",
        "type": "video"
      },
      {
        "title": "Getting Started with LXC containers",
        "url": "https://youtu.be/CWmkSj_B-wo",
        "type": "video"
      }
    ]
  },
  "sVuIdAe08IWJVqAt4z-ag": {
    "title": "WebSockets",
    "description": "WebSockets enable full-duplex, real-time communication over a single persistent connection between client and server. Unlike HTTP's request-response cycles, allows continuous bidirectional data exchange. Ideal for live chat, gaming, and real-time updates with low-latency communication.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Socket.io Library Bidirectional and Low-latency Communication for Every Platform",
        "url": "https://socket.io/",
        "type": "article"
      },
      {
        "title": "Introduction to WebSockets",
        "url": "https://www.tutorialspoint.com/websockets/index.htm",
        "type": "article"
      },
      {
        "title": "A Beginners Guide to WebSockets",
        "url": "https://www.youtube.com/watch?v=8ARodQ4Wlf4",
        "type": "video"
      },
      {
        "title": "How Web Sockets Work",
        "url": "https://www.youtube.com/watch?v=G0_e02DdH7I",
        "type": "video"
      }
    ]
  },
  "RUSdlokJUcEYbCvq5FJBJ": {
    "title": "Server Sent Events",
    "description": "Server-Sent Events (SSE) sends real-time updates from server to client over persistent HTTP connection. Enables efficient server push with automatic reconnection. Ideal for one-way communication like live notifications using simple text-based format and EventSource API.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Server Sent Events - MDN",
        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events",
        "type": "article"
      },
      {
        "title": "Server-Sent Events | Postman Level Up",
        "url": "https://www.youtube.com/watch?v=KrE044J8jEQ&t=1s",
        "type": "video"
      }
    ]
  },
  "z5AdThp9ByulmM9uekgm-": {
    "title": "Nginx",
    "description": "Nginx is a high-performance web server and reverse proxy known for efficiency and low resource consumption. Also used as load balancer, HTTP cache, and mail proxy. Excels at concurrent connections via asynchronous, event-driven architecture. Popular for modern web infrastructures.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Nginx Website",
        "url": "https://nginx.org/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Nginx",
        "url": "https://app.daily.dev/tags/nginx?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "NGINX Explained in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=JKxlsvZXG7c",
        "type": "video"
      },
      {
        "title": "NGINX Tutorial for Beginners",
        "url": "https://www.youtube.com/watch?v=9t9Mp0BGnyI",
        "type": "video"
      }
    ]
  },
  "Op-PSPNoyj6Ss9CS09AXh": {
    "title": "Caddy",
    "description": "Caddy is a modern Go-based web server known for simplicity and automatic HTTPS with Let's Encrypt certificates. Features zero-config static file serving, HTTP/2 support, and plugins for reverse proxying and load balancing. Ideal for small-to-medium projects requiring hassle-free setup.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "caddyserver/caddy - Caddy on GitHub",
        "url": "https://github.com/caddyserver/caddy",
        "type": "opensource"
      },
      {
        "title": "Caddy Server",
        "url": "https://caddyserver.com/",
        "type": "article"
      },
      {
        "title": "How to Make a Simple Caddy 2 Website",
        "url": "https://www.youtube.com/watch?v=WgUV_BlHvj0",
        "type": "video"
      }
    ]
  },
  "jjjonHTHHo-NiAf6p9xPv": {
    "title": "Apache",
    "description": "Apache HTTP Server is a popular open-source web server known for flexibility and extensive features. It supports multiple OS platforms, offers virtual hosting, SSL/TLS, and modular architecture. Part of the LAMP stack, it remains widely used despite competition from Nginx due to stability and community support.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Apache Server",
        "url": "https://httpd.apache.org/",
        "type": "article"
      },
      {
        "title": "Apache Server Documentation",
        "url": "https://httpd.apache.org/docs/2.4/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Apache",
        "url": "https://app.daily.dev/tags/apache?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Apache Web Server?",
        "url": "https://www.youtube.com/watch?v=kaaenHXO4t4",
        "type": "video"
      },
      {
        "title": "Apache vs NGINX",
        "url": "https://www.youtube.com/watch?v=9nyiY-psbMs",
        "type": "video"
      }
    ]
  },
  "0NJDgfe6eMa7qPUOI6Eya": {
    "title": "MS IIS",
    "description": "Microsoft IIS is a flexible, secure web server for hosting web applications on Windows Server. Supports [ASP.NET](http://ASP.NET), PHP, static content with features like authentication, SSL/TLS, URL rewriting. Offers GUI and command-line management tools for enterprise Windows-based deployments.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Microsoft -IIS",
        "url": "https://www.iis.net/",
        "type": "article"
      },
      {
        "title": "Explore top posts about .NET",
        "url": "https://app.daily.dev/tags/.net?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Learn Windows Web Server IIS",
        "url": "https://www.youtube.com/watch?v=1VdxPWwtISA",
        "type": "video"
      },
      {
        "title": "What is IIS?",
        "url": "https://www.youtube.com/watch?v=hPWSqEXOjQY",
        "type": "video"
      }
    ]
  },
  "learn-about-web-servers@fekyMpEnaGqjh1Cu4Nyc4.md": {
    "title": "Learn about Web Servers",
    "description": "",
    "links": []
  },
  "SHmbcMRsc3SygEDksJQBD": {
    "title": "Building For Scale",
    "description": "Scalability is a system's ability to handle growing workload by adding resources. Scalable architecture supports higher workloads without fundamental changes. Two approaches: on-premises (requires planning) or cloud (flexible, easy upgrades). Cloud offers more flexibility than on-premises infrastructure.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Scalable Architecture: A Definition and How-To Guide",
        "url": "https://www.sentinelone.com/blog/scalable-architecture/",
        "type": "article"
      },
      {
        "title": "Scaling Distributed Systems - Software Architecture Introduction",
        "url": "https://www.youtube.com/watch?v=gxfERVP18-g",
        "type": "video"
      }
    ]
  },
  "g8GjkJAhvnSxXTZks0V1g": {
    "title": "Redis",
    "description": "Redis is an open-source, in-memory data structure store supporting strings, lists, sets, hashes, and sorted sets. Used for caching, session management, real-time analytics, and message brokering. Offers persistence, replication, clustering, and low-latency high-throughput performance.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Redis Crash Course",
        "url": "https://www.youtube.com/watch?v=XCsS_NVAa1g",
        "type": "course"
      },
      {
        "title": "Visit Dedicated Redis Roadmap",
        "url": "https://roadmap.sh/redis",
        "type": "article"
      },
      {
        "title": "Redis",
        "url": "https://redis.io/",
        "type": "article"
      },
      {
        "title": "Redis Documentation",
        "url": "https://redis.io/docs/latest/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Redis",
        "url": "https://app.daily.dev/tags/redis?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Redis in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=G1rOthIU-uo",
        "type": "video"
      }
    ]
  },
  "xPvVwGQw28uMeLYIWn8yn": {
    "title": "Memcached",
    "description": "Memcached is a distributed memory-caching system that speeds up dynamic websites by caching data and objects in RAM. Provides large distributed hash table across multiple machines with LRU eviction. Applications layer requests in RAM before falling back to slower backing stores.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "memcached/memcached",
        "url": "https://github.com/memcached/memcached#readme",
        "type": "opensource"
      },
      {
        "title": "Memcached Tutorial",
        "url": "https://www.tutorialspoint.com/memcached/index.htm",
        "type": "article"
      },
      {
        "title": "Redis vs Memcached",
        "url": "https://www.youtube.com/watch?v=Gyy1SiE8avE",
        "type": "video"
      }
    ]
  },
  "28U6q_X-NTYf7OSKHjoWH": {
    "title": "MongoDB",
    "description": "MongoDB is a NoSQL document-oriented database storing data in BSON format without fixed schemas. Supports horizontal scaling via sharding and high availability through replica sets. Ideal for applications with evolving data structures, real-time analytics, and large-scale data handling.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Visit Dedicated MongoDB Roadmap",
        "url": "https://roadmap.sh/mongodb",
        "type": "article"
      },
      {
        "title": "MongoDB Website",
        "url": "https://www.mongodb.com/",
        "type": "article"
      },
      {
        "title": "Learning Path for MongoDB Developers",
        "url": "https://learn.mongodb.com/catalog",
        "type": "article"
      },
      {
        "title": "MongoDB Online Sandbox",
        "url": "https://mongoplayground.net/",
        "type": "article"
      },
      {
        "title": "daily.dev MongoDB Feed",
        "url": "https://app.daily.dev/tags/mongodb",
        "type": "article"
      }
    ]
  },
  "qOlNzZ7U8LhIGukb67n7U": {
    "title": "CouchDB",
    "description": "Apache CouchDB is a document-oriented NoSQL database using JSON for data storage, JavaScript MapReduce for queries, and HTTP for API access. Stores independent documents with self-contained schemas instead of relational tables.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "CouchDB",
        "url": "https://couchdb.apache.org/",
        "type": "article"
      },
      {
        "title": "CouchDB Documentation",
        "url": "https://docs.couchdb.org/en/stable/",
        "type": "article"
      },
      {
        "title": "Explore top posts about CouchDB",
        "url": "https://app.daily.dev/tags/couchdb?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is CouchDB?",
        "url": "https://www.youtube.com/watch?v=Mru4sHzIfSA",
        "type": "video"
      }
    ]
  },
  "BTNJfWemFKEeNeTyENXui": {
    "title": "Neo4j",
    "description": "Neo4j is an open-source graph database storing data as interconnected nodes and relationships rather than tables. Uses Cypher query language for efficient graph traversal and pattern matching. Ideal for complex relationship applications like social networks, recommendations, and fraud detection.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Neo4j Website",
        "url": "https://neo4j.com",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Neo4j in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=T6L9EoBy8Zk",
        "type": "video"
      },
      {
        "title": "Neo4j Course for Beginners",
        "url": "https://www.youtube.com/watch?v=_IgbB24scLI",
        "type": "video"
      }
    ]
  },
  "G9AI_i3MkUE1BsO3_-PH7": {
    "title": "Graceful Degradation",
    "description": "Graceful degradation ensures systems continue functioning when components or features are unavailable. In web development, applications remain functional even if browsers don't support certain features. Alternative to progressive enhancement for maintaining system reliability.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is Graceful Degradation & Why Does it Matter?",
        "url": "https://blog.hubspot.com/website/graceful-degradation",
        "type": "article"
      },
      {
        "title": "Four Considerations When Designing Systems For Graceful Degradation",
        "url": "https://newrelic.com/blog/best-practices/design-software-for-graceful-degradation",
        "type": "article"
      },
      {
        "title": "Graceful Degradation - Georgia Tech",
        "url": "https://www.youtube.com/watch?v=Tk7e0LMsAlI",
        "type": "video"
      }
    ]
  },
  "qAu-Y4KI2Z_y-EqiG86cR": {
    "title": "Throttling",
    "description": "Throttling controls the rate of request processing to prevent system overload by setting limits on requests per time period. Manages resource consumption, ensures fair usage, maintains stability, and protects against abuse. Commonly used in APIs, networks, and databases.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Throttling - AWS Well-Architected Framework",
        "url": "https://docs.aws.amazon.com/wellarchitected/2022-03-31/framework/rel_mitigate_interaction_failure_throttle_requests.html",
        "type": "article"
      },
      {
        "title": "Throttling vs Debouncing",
        "url": "https://www.youtube.com/watch?v=tJhA0DrH5co",
        "type": "video"
      }
    ]
  },
  "JansCqGDyXecQkD1K7E7e": {
    "title": "Backpressure",
    "description": "Backpressure is a flow control mechanism where receivers signal their capacity to senders, preventing system overload. It manages resource allocation, prevents memory overflows, and maintains responsiveness in reactive programming, message queues, and streaming systems.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Awesome Architecture: Backpressure",
        "url": "https://awesome-architecture.com/back-pressure/",
        "type": "article"
      },
      {
        "title": "Backpressure explained — The Resisted Flow of Data through Software",
        "url": "https://medium.com/@jayphelps/backpressure-explained-the-flow-of-data-through-software-2350b3e77ce7",
        "type": "article"
      },
      {
        "title": "What is Back Pressure",
        "url": "https://www.youtube.com/watch?v=viTGm_cV7lE",
        "type": "video"
      }
    ]
  },
  "HoQdX7a4SnkFRU4RPQ-D5": {
    "title": "Loadshifting",
    "description": "Load shifting manages computing workloads by redistributing load from peak to off-peak periods. Helps balance resource demand, optimize performance, and reduce costs through job rescheduling, region switching, and dynamic resource allocation. Enhances system reliability and infrastructure utilization.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "Load Shifting",
        "url": "https://en.wikipedia.org/wiki/Load_shifting",
        "type": "article"
      },
      {
        "title": "Load Shifting 101",
        "url": "https://www.youtube.com/watch?v=DOyMJEdk5aE",
        "type": "video"
      }
    ]
  },
  "spkiQTPvXY4qrhhVUkoPV": {
    "title": "Circuit Breaker",
    "description": "Circuit breaker pattern protects systems from failures by temporarily stopping operations when overloaded. Has three states: closed (normal), open (stopped operations), and half-open (testing recovery). Prevents cascading failures in distributed systems.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Circuit Breaker - AWS Well-Architected Framework",
        "url": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_mitigate_interaction_failure_graceful_degradation.html",
        "type": "article"
      },
      {
        "title": "The Circuit Breaker Pattern",
        "url": "https://aerospike.com/blog/circuit-breaker-pattern/",
        "type": "article"
      },
      {
        "title": "Back to Basics: Static Stability Using a Circuit Breaker Pattern",
        "url": "https://www.youtube.com/watch?v=gy1RITZ7N7s",
        "type": "video"
      }
    ]
  },
  "4X-sbqpP0NDhM99bKdqIa": {
    "title": "Instrumentation",
    "description": "Instrumentation embeds code to capture metrics, logs, and traces. Monitoring observes real-time metrics for anomalies and performance issues using dashboards and alerts. Telemetry automates data collection from distributed systems. Together they provide system health insights and proactive issue resolution.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is Instrumentation?",
        "url": "https://en.wikipedia.org/wiki/Instrumentation_/(computer_programming/)",
        "type": "article"
      },
      {
        "title": "What is Monitoring?",
        "url": "https://www.yottaa.com/performance-monitoring-backend-vs-front-end-solutions/",
        "type": "article"
      },
      {
        "title": "What is Telemetry?",
        "url": "https://www.sumologic.com/insight/what-is-telemetry/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Monitoring",
        "url": "https://app.daily.dev/tags/monitoring?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Observability vs. APM vs. Monitoring",
        "url": "https://www.youtube.com/watch?v=CAQ_a2-9UOI",
        "type": "video"
      }
    ]
  },
  "QvMEEsXh0-rzn5hDGcmEv": {
    "title": "Monitoring",
    "description": "Monitoring continuously tracks system performance, availability, and health through metrics, logs, and events. Detects anomalies, prevents issues, and provides system behavior insights via dashboards and alerts. Essential for reliability and incident response. Popular tools: Grafana, Sentry, Mixpanel, NewRelic.",
    "links": [
      {
        "title": "Top Monitoring Tools",
        "url": "https://thectoclub.com/tools/best-application-monitoring-software/",
        "type": "article"
      },
      {
        "title": "daily.dev Monitoring Feed",
        "url": "https://app.daily.dev/tags/monitoring",
        "type": "article"
      },
      {
        "title": "Grafana Explained in 5 Minutes",
        "url": "https://www.youtube.com/watch?v=lILY8eSspEo",
        "type": "video"
      }
    ]
  },
  "neVRtPjIHP_VG7lHwfah0": {
    "title": "Telemetry",
    "description": "Telemetry automates collection, transmission, and analysis of data from distributed systems to monitor performance and health. Provides real-time insights, identifies issues, optimizes performance. Collects metrics like resource usage and error rates for anomaly detection and decision-making.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "OpenTelemetry Course - Understand Software Performance",
        "url": "https://www.youtube.com/watch?v=r8UvWSX3KA8",
        "type": "course"
      },
      {
        "title": "What is telemetry and how does it work?",
        "url": "https://www.techtarget.com/whatis/definition/telemetry",
        "type": "article"
      },
      {
        "title": "daily.dev OpenTelemetry feed",
        "url": "https://app.daily.dev/tags/opentelemetry",
        "type": "article"
      }
    ]
  },
  "jWwA6yX4Zjx-r_KpDaD3c": {
    "title": "MD5",
    "description": "MD5 (Message-Digest Algorithm 5) produces 128-bit hash values as 32-character hexadecimal strings. Once popular for data integrity and passwords, now considered cryptographically broken due to collision vulnerabilities. Largely replaced by secure alternatives like SHA-256.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Wikipedia - MD5",
        "url": "https://en.wikipedia.org/wiki/MD5",
        "type": "article"
      },
      {
        "title": "What is MD5?",
        "url": "https://www.techtarget.com/searchsecurity/definition/MD5",
        "type": "article"
      },
      {
        "title": "Why is MD5 not safe?",
        "url": "https://infosecscout.com/why-md5-is-not-safe/",
        "type": "article"
      },
      {
        "title": "How the MD5 hash function works",
        "url": "https://www.youtube.com/watch?v=5MiMK45gkTY",
        "type": "video"
      }
    ]
  },
  "JVN38r5jENoteia3YeIQ3": {
    "title": "SHA",
    "description": "SHA (Secure Hash Algorithm) is a family of cryptographic hash functions generating fixed-size hash values for data integrity and security. Includes SHA-1 (weak, 160-bit), SHA-2 (stronger, 224-512 bits), and SHA-3 (latest with additional security features). Used for password storage and digital signatures.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is SHA?",
        "url": "https://www.encryptionconsulting.com/education-center/what-is-sha/",
        "type": "article"
      },
      {
        "title": "SHA: Secure Hashing Algorithm",
        "url": "https://www.youtube.com/watch?v=DMtFhACPnTY",
        "type": "video"
      }
    ]
  },
  "kGTALrvCpxyVCXHRmkI7s": {
    "title": "scrypt",
    "description": "scrypt is a memory-hard key derivation function designed to resist brute-force and hardware-based attacks (GPUs, ASICs). Combines hash functions with high memory usage and CPU-intensive computation, making large-scale attacks costly and impractical. Used for secure password storage and cryptocurrency mining.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "sCrypt Website",
        "url": "https://scrypt.io/",
        "type": "article"
      },
      {
        "title": "sCrypt: A Beginner’s Guide",
        "url": "https://medium.com/@yusufedresmaina/scrypt-a-beginners-guide-cf1aecf8b010",
        "type": "article"
      },
      {
        "title": "Wikipedia - scrypt",
        "url": "https://en.wikipedia.org/wiki/Scrypt",
        "type": "article"
      }
    ]
  },
  "dlG1bVkDmjI3PEGpkm1xH": {
    "title": "bcrypt",
    "description": "Bcrypt is a secure password-hashing function based on Blowfish cipher with built-in salt protection. Features adaptive cost factor that increases difficulty over time to resist brute-force attacks. Produces 60-character hashes, widely used for secure password storage.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "bcrypt",
        "url": "https://github.com/kelektiv/node.bcrypt.js",
        "type": "opensource"
      },
      {
        "title": "Understanding bcrypt",
        "url": "https://auth0.com/blog/hashing-in-action-understanding-bcrypt/",
        "type": "article"
      },
      {
        "title": "bcrypt explained",
        "url": "https://www.youtube.com/watch?v=AzA_LTDoFqY",
        "type": "video"
      }
    ]
  },
  "x-WBJjBd8u93ym5gtxGsR": {
    "title": "HTTPS",
    "description": "HTTPS (Hypertext Transfer Protocol Secure) extends HTTP with SSL/TLS encryption for secure data transmission. Ensures confidentiality, integrity, and authenticity, protecting against interception and tampering. Essential standard for web applications handling sensitive user data.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is HTTPS?",
        "url": "https://www.cloudflare.com/en-gb/learning/ssl/what-is-https/",
        "type": "article"
      },
      {
        "title": "Why HTTPS Matters",
        "url": "https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https",
        "type": "article"
      },
      {
        "title": "How HTTPS works (comic)",
        "url": "https://howhttps.works/",
        "type": "article"
      },
      {
        "title": "HTTPS explained with carrier pigeons",
        "url": "https://baida.dev/articles/https-explained-with-carrier-pigeons",
        "type": "article"
      },
      {
        "title": "HTTP vs HTTPS",
        "url": "https://www.youtube.com/watch?v=nOmT_5hqgPk",
        "type": "video"
      }
    ]
  },
  "AAgciyxuDvS2B_c6FRMvT": {
    "title": "OWASP Risks",
    "description": "OWASP (Open Web Application Security Project) is an online community producing freely-available articles, methodologies, documentation, tools, and technologies for web application security.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "OWASP Application Security Verification Standard",
        "url": "https://github.com/OWASP/ASVS",
        "type": "opensource"
      },
      {
        "title": "OWASP Website",
        "url": "https://owasp.org/",
        "type": "article"
      },
      {
        "title": "OWASP Top 10 Security Risks",
        "url": "https://cheatsheetseries.owasp.org/IndexTopTen.html",
        "type": "article"
      },
      {
        "title": "OWASP Cheatsheets",
        "url": "https://cheatsheetseries.owasp.org/cheatsheets/AJAX_Security_Cheat_Sheet.html",
        "type": "article"
      }
    ]
  },
  "0v3OsaghJEGHeXX0c5kqn": {
    "title": "SSL/TLS",
    "description": "SSL and TLS are cryptographic protocols providing internet communication security through data encryption. SSL is deprecated due to security flaws; modern browsers no longer support it. TLS remains secure and widely supported for encrypted data transmission.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Wikipedia - SSL/TLS",
        "url": "https://en.wikipedia.org/wiki/Transport_Layer_Security",
        "type": "article"
      },
      {
        "title": "Cloudflare - What is SSL?",
        "url": "https://www.cloudflare.com/learning/ssl/what-is-ssl/",
        "type": "article"
      },
      {
        "title": "SSL, TLS, HTTPS Explained",
        "url": "https://www.youtube.com/watch?v=j9QmMEWmcfo",
        "type": "video"
      }
    ]
  },
  "LU6WUbkWKbPM1rb2_gEqa": {
    "title": "CORS",
    "description": "CORS (Cross-Origin Resource Sharing) is a browser security mechanism controlling cross-domain resource access. Uses HTTP headers and preflight requests to determine allowed origins. Extends Same-Origin Policy while preventing unauthorized access to sensitive data.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Cross-Origin Resource Sharing (CORS)",
        "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS",
        "type": "article"
      },
      {
        "title": "Understanding CORS",
        "url": "https://rbika.com/blog/understanding-cors",
        "type": "article"
      },
      {
        "title": "CORS in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=4KHiSt0oLJ0",
        "type": "video"
      },
      {
        "title": "CORS in 6 minutes",
        "url": "https://www.youtube.com/watch?v=PNtFSVU-YTI",
        "type": "video"
      }
    ]
  },
  "TZ0BWOENPv6pQm8qYB8Ow": {
    "title": "Server Security",
    "description": "Server security protects servers from threats through patch management, access control, firewalls, encryption, security hardening, regular backups, and monitoring. Ensures confidentiality, integrity, and availability of data and services with continuous threat detection and response.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "What is a hardened server?",
        "url": "https://www.sophos.com/en-us/cybersecurity-explained/what-is-server-hardening",
        "type": "article"
      },
      {
        "title": "10 Tips for Hardening your Linux Servers",
        "url": "https://www.youtube.com/watch?v=Jnxx_IAC0G4",
        "type": "video"
      }
    ]
  },
  "HgQBde1zLUFtlwB66PR6_": {
    "title": "CSP",
    "description": "CSP (Content Security Policy) prevents XSS and code injection attacks by specifying trusted content sources. Implemented via HTTP headers or meta tags, defining rules for scripts, stylesheets, images, and fonts. Reduces malicious code execution risk but requires careful configuration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "MDN — Content Security Policy (CSP)",
        "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP",
        "type": "article"
      },
      {
        "title": "Google Devs — Content Security Policy (CSP)",
        "url": "https://developers.google.com/web/fundamentals/security/csp",
        "type": "article"
      },
      {
        "title": "Explore top posts about Security",
        "url": "https://app.daily.dev/tags/security?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Content Security Policy Explained",
        "url": "https://www.youtube.com/watch?v=-LjPRzFR5f0",
        "type": "video"
      }
    ]
  },
  "yCnn-NfSxIybUQ2iTuUGq": {
    "title": "How does the internet work?",
    "description": "The internet is a global network of interconnected computers using TCP/IP protocols. Requests travel through ISPs to DNS servers for domain-to-IP translation, then route across networks via routers to destination servers. Enables dynamic, decentralized global communication.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "How does the Internet Work?",
        "url": "https://cs.fyi/guide/how-does-internet-work",
        "type": "article"
      },
      {
        "title": "The Internet Explained",
        "url": "https://www.vox.com/2014/6/16/18076282/the-internet",
        "type": "article"
      },
      {
        "title": "How Does the Internet Work?",
        "url": "http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm",
        "type": "article"
      },
      {
        "title": "Introduction to Internet",
        "url": "/guides/what-is-internet",
        "type": "article"
      },
      {
        "title": "How does the Internet work?",
        "url": "https://www.youtube.com/watch?v=x3c1ih2NJEg",
        "type": "video"
      },
      {
        "title": "How does the internet work? (Full Course)",
        "url": "https://www.youtube.com/watch?v=zN8YNNHcaZc",
        "type": "video"
      }
    ]
  },
  "R12sArWVpbIs_PHxBqVaR": {
    "title": "What is HTTP?",
    "description": "HTTP (Hypertext Transfer Protocol) transmits hypertext over the web using request-response model. Defines message formatting and server-browser communication. Stateless protocol where each request is independent. Forms foundation of web communication, often used with HTTPS for encryption.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Full HTTP Networking Course",
        "url": "https://www.youtube.com/watch?v=2JYT5f2isg4",
        "type": "course"
      },
      {
        "title": "What is HTTP?",
        "url": "https://www.cloudflare.com/en-gb/learning/ddos/glossary/hypertext-transfer-protocol-http/",
        "type": "article"
      },
      {
        "title": "Overview of HTTP",
        "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview",
        "type": "article"
      },
      {
        "title": "HTTP/3 From A To Z: Core Concepts",
        "url": "https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/",
        "type": "article"
      },
      {
        "title": "Every thing you need to know about HTTP",
        "url": "https://www3.ntu.edu.sg/home/ehchua/programming/webprogramming/HTTP_Basics.html",
        "type": "article"
      },
      {
        "title": "HTTP/1 to HTTP/2 to HTTP/3",
        "url": "https://www.youtube.com/watch?v=a-sBfyiXysI",
        "type": "video"
      },
      {
        "title": "SSL, TLS, HTTPS Explained",
        "url": "https://www.youtube.com/watch?v=j9QmMEWmcfo",
        "type": "video"
      }
    ]
  },
  "ZhSuu2VArnzPDp6dPQQSC": {
    "title": "What is Domain Name?",
    "description": "Domain names are human-readable internet addresses that translate to IP addresses for computer identification. Consist of second-level domain (\"example\") and top-level domain (\".com\"). Managed by registrars, providing user-friendly website navigation instead of numeric IP addresses.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is a Domain Name?",
        "url": "https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name",
        "type": "article"
      },
      {
        "title": "What is a Domain Name? | Domain name vs. URL",
        "url": "https://www.cloudflare.com/en-gb/learning/dns/glossary/what-is-a-domain-name/",
        "type": "article"
      },
      {
        "title": "A Beginners Guide to How Domain Names Work",
        "url": "https://www.youtube.com/watch?v=Y4cRx19nhJk",
        "type": "video"
      },
      {
        "title": "Everything You Need to Know About Domain Names",
        "url": "https://www.youtube.com/watch?v=qO5qcQgiNX4",
        "type": "video"
      }
    ]
  },
  "aqMaEY8gkKMikiqleV5EP": {
    "title": "What is hosting?",
    "description": "Hosting provides server space and resources for storing and delivering websites over the internet. Types include shared hosting, VPS, dedicated hosting, and cloud hosting with scalable resources. Services include infrastructure, domain registration, security, and technical support for reliable website availability.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "What is the difference between Webpage, Website, Web server, and search engine?",
        "url": "https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/Pages_sites_servers_and_search_engines",
        "type": "article"
      },
      {
        "title": "What is a web server?",
        "url": "https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_web_server",
        "type": "article"
      },
      {
        "title": "What is Web Hosting and How Does It Work?",
        "url": "https://www.youtube.com/watch?v=H8oAvyqQwew",
        "type": "video"
      },
      {
        "title": "Different Types of Web Hosting Explained",
        "url": "https://www.youtube.com/watch?v=AXVZYzw8geg",
        "type": "video"
      },
      {
        "title": "Where to Host a Fullstack Project on a Budget",
        "url": "https://www.youtube.com/watch?v=Kx_1NYYJS7Q",
        "type": "video"
      }
    ]
  },
  "hkxw9jPGYphmjhTjw8766": {
    "title": "DNS and how it works?",
    "description": "DNS (Domain Name System) translates human-readable domain names into IP addresses. Uses hierarchical structure with root servers, TLD servers (.com, .org), authoritative servers, and local DNS servers. Essential for internet functionality, enabling memorable names instead of IP addresses.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Everything You Need to Know About DNS",
        "url": "https://cs.fyi/guide/everything-you-need-to-know-about-dns",
        "type": "article"
      },
      {
        "title": "What is DNS?",
        "url": "https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/",
        "type": "article"
      },
      {
        "title": "How DNS works (comic)",
        "url": "https://howdns.works/",
        "type": "article"
      },
      {
        "title": "Explore top posts about DNS",
        "url": "https://app.daily.dev/tags/dns?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "DNS and How does it Work?",
        "url": "https://www.youtube.com/watch?v=Wj0od2ag5sk",
        "type": "video"
      }
    ]
  },
  "P82WFaTPgQEPNp5IIuZ1Y": {
    "title": "Browsers and how they work?",
    "description": "Web browsers interpret HTML, CSS, and JavaScript to render web pages. Modern browsers use rendering engines (Blink, Gecko, WebKit) and JavaScript engines, offering features like tabs, bookmarks, extensions, and security through sandboxing and HTTPS enforcement.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "How Browsers Work",
        "url": "https://www.ramotion.com/blog/what-is-web-browser/",
        "type": "article"
      },
      {
        "title": "Populating the Page: How Browsers Work",
        "url": "https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work",
        "type": "article"
      },
      {
        "title": "Explore top posts about Browsers",
        "url": "https://app.daily.dev/tags/browsers?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "How Do Web Browsers Work?",
        "url": "https://www.youtube.com/watch?v=5rLFYtXHo9s",
        "type": "video"
      }
    ]
  },
  "PY9G7KQy8bF6eIdr1ydHf": {
    "title": "Authentication",
    "description": "API authentication verifies client identity to ensure only authorized access to resources. Common methods include API keys, OAuth 2.0, JWT, and basic auth. It protects data, prevents unauthorized access, enables usage tracking, and provides granular control over API resources.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Basic Authentication",
        "url": "https://roadmap.sh/guides/basic-authentication",
        "type": "article"
      },
      {
        "title": "Session Based Authentication",
        "url": "https://roadmap.sh/guides/session-authentication",
        "type": "article"
      },
      {
        "title": "Token Based Authentication",
        "url": "https://roadmap.sh/guides/token-authentication",
        "type": "article"
      },
      {
        "title": "JWT Authentication",
        "url": "https://roadmap.sh/guides/jwt-authentication",
        "type": "article"
      },
      {
        "title": "OAuth - Open Authorization",
        "url": "https://roadmap.sh/guides/oauth",
        "type": "article"
      },
      {
        "title": "SSO - Single Sign On",
        "url": "https://roadmap.sh/guides/sso",
        "type": "article"
      },
      {
        "title": "Explore top posts about Authentication",
        "url": "https://app.daily.dev/tags/authentication?ref=roadmapsh",
        "type": "article"
      }
    ]
  },
  "UxS_mzVUjLigEwKrXnEeB": {
    "title": "JWT",
    "description": "JWT (JSON Web Token) securely transmits information as JSON objects with three parts: header (token type/algorithm), payload (claims/data), and signature (integrity verification). Used for authentication and authorization in web/mobile apps. Compact, self-contained, and HTTP header-friendly.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "jwt.io Website",
        "url": "https://jwt.io/",
        "type": "article"
      },
      {
        "title": "What is JWT?",
        "url": "https://www.akana.com/blog/what-is-jwt",
        "type": "article"
      },
      {
        "title": "Explore top posts about JWT",
        "url": "https://app.daily.dev/tags/jwt?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What Is JWT and Why Should You Use JWT",
        "url": "https://www.youtube.com/watch?v=7Q17ubqLfaM",
        "type": "video"
      }
    ]
  },
  "yRiJgjjv2s1uV9vgo3n8m": {
    "title": "Basic Authentication",
    "description": "Basic Authentication sends base64-encoded username:password in HTTP headers. Simple to implement but insecure since base64 is easily decoded. Should only be used over HTTPS for credential protection. Best for low-risk scenarios or fallback mechanisms.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "HTTP Basic Authentication",
        "url": "https://roadmap.sh/guides/http-basic-authentication",
        "type": "article"
      },
      {
        "title": "Explore top posts about Authentication",
        "url": "https://app.daily.dev/tags/authentication?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Basic Authentication in 5 minutes",
        "url": "https://www.youtube.com/watch?v=rhi1eIjSbvk",
        "type": "video"
      },
      {
        "title": "Illustrated HTTP Basic Authentication",
        "url": "https://www.youtube.com/watch?v=mwccHwUn7Gc",
        "type": "video"
      }
    ]
  },
  "0rGj7FThLJZouSQUhnqGW": {
    "title": "Token Authentication",
    "description": "Token-based authentication verifies user identity and provides unique access tokens. Users access protected resources without re-entering credentials while token remains valid. Works like stamped tickets, invalidated on logout. Offers second security layer with detailed administrative control.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Token Based Authentication",
        "url": "https://roadmap.sh/guides/token-authentication",
        "type": "article"
      },
      {
        "title": "What Is Token-Based Authentication?",
        "url": "https://www.okta.com/identity-101/what-is-token-based-authentication/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Authentication",
        "url": "https://app.daily.dev/tags/authentication?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Why is JWT popular?",
        "url": "https://www.youtube.com/watch?v=P2CPd9ynFLg",
        "type": "video"
      }
    ]
  },
  "vp-muizdICcmU0gN8zmkS": {
    "title": "OAuth",
    "description": "OAuth is an open authorization standard allowing third-party applications to access user resources without exposing credentials. Uses access tokens issued after user permission, involving resource owner, resource server, and authorization server. Enables secure token-based access management for services.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Okta - What the Heck is OAuth",
        "url": "https://developer.okta.com/blog/2017/06/21/what-the-heck-is-oauth",
        "type": "article"
      },
      {
        "title": "DigitalOcean - An Introduction to OAuth 2",
        "url": "https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2",
        "type": "article"
      },
      {
        "title": "Explore top posts about OAuth",
        "url": "https://app.daily.dev/tags/oauth?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "OAuth 2 Explained In Simple Terms",
        "url": "https://www.youtube.com/watch?v=ZV5yTm4pT8g",
        "type": "video"
      }
    ]
  },
  "ffzsh8_5yRq85trFt9Xhk": {
    "title": "Cookie Based Auth",
    "description": "Cookie-based authentication maintains user sessions by storing session IDs in browser cookies. Server stores session data and uses cookies as keys. Simple to implement and browser-native, but vulnerable to CSRF attacks and challenging for cross-origin requests.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "How does cookie based authentication work?",
        "url": "https://stackoverflow.com/questions/17769011/how-does-cookie-based-authentication-work",
        "type": "article"
      },
      {
        "title": "Session vs Token Authentication in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=UBUNrFtufWo",
        "type": "video"
      }
    ]
  },
  "z3EJBpgGm0_Uj3ymhypbX": {
    "title": "OpenID",
    "description": "OpenID is an open standard for decentralized authentication enabling single sign-on across multiple websites using one set of credentials managed by an identity provider. Often works with OAuth 2.0 for authorization, enhancing user convenience and streamlining identity management.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "OpenID Website",
        "url": "https://openid.net/",
        "type": "article"
      },
      {
        "title": "OpenID Connect Protocol",
        "url": "https://auth0.com/docs/authenticate/protocols/openid-connect-protocol",
        "type": "article"
      },
      {
        "title": "Explore top posts about Authentication",
        "url": "https://app.daily.dev/tags/authentication?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "An Illustrated Guide to OAuth and OpenID Connect",
        "url": "https://www.youtube.com/watch?v=t18YB3xDfXI",
        "type": "video"
      },
      {
        "title": "OAuth 2.0 and OpenID Connect (in plain English)",
        "url": "https://www.youtube.com/watch?v=996OiexHze0",
        "type": "video"
      }
    ]
  },
  "UCHtaePVxS-0kpqlYxbfC": {
    "title": "SAML",
    "description": "SAML (Security Assertion Markup Language) is an XML-based framework for single sign-on (SSO) and identity federation. Enables authentication exchange between identity providers (IdP) and service providers (SP) through XML assertions containing user identity and permissions. Streamlines user management and centralized authentication.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "SAML Explained in Plain English",
        "url": "https://www.onelogin.com/learn/saml",
        "type": "article"
      },
      {
        "title": "How SAML Authentication Works",
        "url": "https://www.youtube.com/watch?v=VzRnb9u8T1A",
        "type": "video"
      }
    ]
  },
  "NulaE1isWqn-feYHg4YQT": {
    "title": "Elasticsearch",
    "description": "Elasticsearch is a document-oriented search engine and database supporting INSERT, DELETE, RETRIEVE operations and analytics. Unlike general databases, it's optimized for search with powerful features for fast data retrieval based on search criteria.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Elasticsearch Website",
        "url": "https://www.elastic.co/elasticsearch/",
        "type": "article"
      },
      {
        "title": "Elasticsearch Documentation",
        "url": "https://www.elastic.co/guide/index.html",
        "type": "article"
      },
      {
        "title": "Explore top posts about ELK",
        "url": "https://app.daily.dev/tags/elk?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is Elasticsearch",
        "url": "https://www.youtube.com/watch?v=ZP0NmfyfsoM",
        "type": "video"
      }
    ]
  },
  "iN_1EuIwCx_7lRBw1Io4U": {
    "title": "Solr",
    "description": "Solr is an open-source, scalable search platform built on Apache Lucene for full-text search, faceted search, and real-time indexing. Supports complex queries, distributed searching, text analysis, highlighting, and geographic search. Used for search engines and data retrieval systems.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Solr on GitHub",
        "url": "https://github.com/apache/solr",
        "type": "opensource"
      },
      {
        "title": "Solr Website",
        "url": "https://solr.apache.org/",
        "type": "article"
      },
      {
        "title": "Solr Documentation",
        "url": "https://solr.apache.org/resources.html#documentation",
        "type": "article"
      },
      {
        "title": "Apache Solr vs Elasticsearch Differences",
        "url": "https://www.youtube.com/watch?v=MMWBdSdbu5k",
        "type": "video"
      }
    ]
  },
  "5XGvep2qoti31bsyqNzrU": {
    "title": "Real-Time Data",
    "description": "Real-time data is processed and delivered immediately with minimal delay for prompt system responses. Essential for financial trading, gaming, analytics, and monitoring. Uses stream processing frameworks like Apache Kafka and Flink for high-speed data flows and timely decision-making.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "Real-time Data - Wiki",
        "url": "https://en.wikipedia.org/wiki/Real-time_data",
        "type": "article"
      },
      {
        "title": "What is Real-time Data?",
        "url": "https://www.qlik.com/us/streaming-data/real-time-data",
        "type": "article"
      }
    ]
  },
  "long--short-polling@osvajAJlwGI3XnX0fE-kA.md": {
    "title": "Long / Short Polling",
    "description": "",
    "links": []
  },
  "M0iaSSdVPWaCUpyTG50Vf": {
    "title": "Redis",
    "description": "Redis is an open-source, in-memory data structure store supporting strings, lists, sets, hashes, and sorted sets. Used for caching, session management, real-time analytics, and message brokering. Offers persistence, replication, clustering, and low-latency high-throughput performance.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Redis Crash Course",
        "url": "https://www.youtube.com/watch?v=XCsS_NVAa1g",
        "type": "course"
      },
      {
        "title": "Visit Dedicated Redis Roadmap",
        "url": "https://roadmap.sh/redis",
        "type": "article"
      },
      {
        "title": "Redis",
        "url": "https://redis.io/",
        "type": "article"
      },
      {
        "title": "Redis Documentation",
        "url": "https://redis.io/docs/latest/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Redis",
        "url": "https://app.daily.dev/tags/redis?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Redis in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=G1rOthIU-uo",
        "type": "video"
      }
    ]
  },
  "dwfEHInbX2eFiafM-nRMX": {
    "title": "DynamoDB",
    "description": "AWS DynamoDB is a fully managed, serverless NoSQL database supporting key-value and document models. Offers single-digit millisecond latency, automatic scaling, global tables, and seamless scalability. Ideal for high-traffic web apps, gaming, mobile, and IoT solutions.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "AWS DynamoDB",
        "url": "https://aws.amazon.com/dynamodb/",
        "type": "article"
      },
      {
        "title": "daily.dev AWS DynamoDB Feed",
        "url": "https://app.daily.dev/tags/aws-dynamodb",
        "type": "article"
      },
      {
        "title": "AWS DynamoDB Tutorial For Beginners",
        "url": "https://www.youtube.com/watch?v=2k2GINpO308",
        "type": "video"
      }
    ]
  },
  "RyJFLLGieJ8Xjt-DlIayM": {
    "title": "Firebase",
    "description": "Firebase is Google's comprehensive mobile and web development platform offering real-time database, authentication, cloud storage, hosting, and analytics. Features serverless architecture, real-time synchronization, multiple auth providers, and development tools for testing and monitoring.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "The Ultimate Guide to Firebase",
        "url": "https://fireship.io/lessons/the-ultimate-beginners-guide-to-firebase/",
        "type": "course"
      },
      {
        "title": "Firebase",
        "url": "https://firebase.google.com/",
        "type": "article"
      },
      {
        "title": "Firebase Documentation",
        "url": "https://firebase.google.com/docs",
        "type": "article"
      },
      {
        "title": "Firebase in 100 seconds",
        "url": "https://www.youtube.com/watch?v=vAoB4VbhRzM",
        "type": "video"
      }
    ]
  },
  "5T0ljwlHL0545ICCeehcQ": {
    "title": "RethinkDB",
    "description": "RethinkDB is an open-source, distributed NoSQL database for real-time applications. Features changefeed for automatic data update notifications, JSON document model, rich queries with joins and aggregations. Supports horizontal scaling through sharding and replication. Development ceased in 2016.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "RethinkDB Crash Course",
        "url": "https://www.youtube.com/watch?v=pW3PFtchHDc",
        "type": "course"
      },
      {
        "title": "RethinkDB Website",
        "url": "https://rethinkdb.com/",
        "type": "article"
      }
    ]
  },
  "kdulE3Z_BdbtRmq6T2KmR": {
    "title": "SQLite",
    "description": "SQLite is a lightweight, serverless, self-contained SQL database engine storing data in a single file. Used in mobile apps, desktop applications, and small websites. Supports standard SQL with ACID compliance. Popular for compact, high-performance database needs with minimal configuration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "SQLite",
        "url": "https://www.sqlite.org/index.html",
        "type": "article"
      },
      {
        "title": "SQLite Tutorial",
        "url": "https://www.sqlitetutorial.net/",
        "type": "article"
      },
      {
        "title": "Explore top posts about SQLite",
        "url": "https://app.daily.dev/tags/sqlite?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "SQLite Introduction",
        "url": "https://www.youtube.com/watch?v=8Xyn8R9eKB8",
        "type": "video"
      }
    ]
  },
  "XbM4TDImSH-56NsITjyHK": {
    "title": "Influx DB",
    "description": "InfluxDB is a high-performance, open-source time-series database for handling timestamped data like metrics and events. Optimized for monitoring, IoT, and APM with SQL-like Flux queries. Features retention policies, downsampling, and automatic compaction for scalable time-series storage.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "InfluxDB Website",
        "url": "https://www.influxdata.com/",
        "type": "article"
      },
      {
        "title": "Time series database",
        "url": "https://www.influxdata.com/time-series-database/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Backend Development",
        "url": "https://app.daily.dev/tags/backend?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "The Basics of Time Series Data",
        "url": "https://www.youtube.com/watch?v=wBWTj-1XiRU",
        "type": "video"
      }
    ]
  },
  "timescaledb@WiAK70I0z-_bzbWNwiHUd.md": {
    "title": "TimescaleDB",
    "description": "",
    "links": []
  },
  "cassandra@zsiZLWJ2bMvrjuHch5fX_.md": {
    "title": "Cassandra",
    "description": "",
    "links": []
  },
  "5xy66yQrz1P1w7n6PcAFq": {
    "title": "AWS Neptune",
    "description": "AWS Neptune is a fully managed graph database supporting property graph and RDF models. Uses Gremlin and SPARQL query languages for complex relationships in social networks, recommendations, and fraud detection. Offers high availability, multi-AZ replication, and up to 15 read replicas.\n\nLearn more from the following resources:",
    "links": [
      {
        "title": "AWS Neptune",
        "url": "https://aws.amazon.com/neptune/",
        "type": "article"
      },
      {
        "title": "Setting Up Amazon Neptune Graph Database",
        "url": "https://cliffordedsouza.medium.com/setting-up-amazon-neptune-graph-database-2b73512a7388",
        "type": "article"
      },
      {
        "title": "Getting Started with Neptune Serverless",
        "url": "https://www.youtube.com/watch?v=b04-jjM9t4g",
        "type": "video"
      }
    ]
  },
  "Z01E67D6KjrShvQCHjGR7": {
    "title": "Observability",
    "description": "Observability monitors system internal state through external outputs like metrics, logs, and traces. Involves collecting, analyzing, and visualizing data for performance insights, anomaly detection, and troubleshooting. Enables proactive management and rapid issue response.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "DataDog Docs",
        "url": "https://docs.datadoghq.com/",
        "type": "article"
      },
      {
        "title": "AWS CloudWatch Docs",
        "url": "https://aws.amazon.com/cloudwatch/getting-started/",
        "type": "article"
      },
      {
        "title": "Sentry Docs",
        "url": "https://docs.sentry.io/",
        "type": "article"
      },
      {
        "title": "Observability and Instrumentation: What They Are and Why They Matter",
        "url": "https://newrelic.com/blog/best-practices/observability-instrumentation",
        "type": "article"
      },
      {
        "title": "Explore top posts about Observability",
        "url": "https://app.daily.dev/tags/observability?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "What is observability?",
        "url": "https://www.youtube.com/watch?v=--17See0KHs",
        "type": "video"
      }
    ]
  },
  "frontend-basics@oyg5g4-cY5EBEUgVkjnL3.md": {
    "title": "Frontend Basics",
    "description": "",
    "links": []
  },
  "html@9-pCsW650T1mfj5dmRB9L.md": {
    "title": "HTML",
    "description": "",
    "links": []
  },
  "css@utA1W2O6pzoV_LbtDE5DN.md": {
    "title": "CSS",
    "description": "",
    "links": []
  },
  "javascript@An2lMuJEkkpL0cfw4RrSl.md": {
    "title": "JavaScript",
    "description": "",
    "links": []
  },
  "K55h3aqOGe6-hgVhiFisT": {
    "title": "Microservices",
    "description": "Microservices architecture structures applications as loosely coupled, independently deployable services focused on specific business capabilities. Communicate via HTTP or messaging. Enables scalability, flexibility, diverse technologies, and continuous deployment but adds complexity in communication and orchestration.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Pattern: Microservice Architecture",
        "url": "https://microservices.io/patterns/microservices.html",
        "type": "article"
      },
      {
        "title": "What is Microservices?",
        "url": "https://smartbear.com/solutions/microservices/",
        "type": "article"
      },
      {
        "title": "Microservices 101",
        "url": "https://thenewstack.io/microservices-101/",
        "type": "article"
      },
      {
        "title": "Articles about Microservices",
        "url": "https://thenewstack.io/category/microservices/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Microservices",
        "url": "https://app.daily.dev/tags/microservices?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Microservices explained in 5 minutes",
        "url": "https://www.youtube.com/watch?v=lL_j7ilk7rc",
        "type": "video"
      }
    ]
  },
  "nkmIv3dNwre4yrULMgTh3": {
    "title": "Serverless",
    "description": "Serverless computing lets developers build applications without managing server infrastructure. Cloud providers handle scaling and maintenance while developers deploy event-triggered functions. Billing based on actual usage. Platforms: AWS Lambda, Google Cloud Functions, Azure Functions.\n\nVisit the following resources to learn more:",
    "links": [
      {
        "title": "Serverless",
        "url": "https://www.ibm.com/cloud/learn/serverless",
        "type": "article"
      },
      {
        "title": "AWS Services",
        "url": "https://aws.amazon.com/serverless/",
        "type": "article"
      },
      {
        "title": "Explore top posts about Serverless",
        "url": "https://app.daily.dev/tags/serverless?ref=roadmapsh",
        "type": "article"
      },
      {
        "title": "Serverless Computing in 100 Seconds",
        "url": "https://www.youtube.com/watch?v=W_VV2Fx32_Y&ab_channel=Fireship",
        "type": "video"
      }
    ]
  },
  "clickhouse@ZyGLSvx17p7QmYDy1LFbM.md": {
    "title": "ClickHouse",
    "description": "",
    "links": []
  },
  "scylladb@aArZ3gKwObzafCkTOd-Hj.md": {
    "title": "ScyllaDB",
    "description": "",
    "links": []
  },
  "dgraph@GKrcTsUi5XWj_pP1TOK0S.md": {
    "title": "DGraph",
    "description": "",
    "links": []
  },
  "migrations@MOLAXgs0CMCT7o84L0EaK.md": {
    "title": "Migrations",
    "description": "",
    "links": []
  }
}